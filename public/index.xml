<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Rowan&#39;s Place</title>
    <link>http://www.rkinneavy.com/</link>
    <description>Recent content in Home on Rowan&#39;s Place</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-GB</language>
    
	<atom:link href="http://www.rkinneavy.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>http://www.rkinneavy.com/docs/cubing/practice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.rkinneavy.com/docs/cubing/practice/</guid>
      <description>How To Practice [v1]  The following is copied over from a post I wrote back in 2011 on speedsolving.com. Since then, it&#39;s received about 60k pageviews, which I think is pretty decent for a forum which shrank a lot with the advent of Reddit! I made some small formatting and editorial changes for readability, the content is effectively intact. It&#39;s cubing-centric, but I think a non-cuber can read it and get some value from it with only limited familiarity with the hobby (you don&#39;t have to know how to solve).</description>
    </item>
    
    <item>
      <title></title>
      <link>http://www.rkinneavy.com/docs/linux/setup/home/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.rkinneavy.com/docs/linux/setup/home/</guid>
      <description>There&#39;s no place like $HOME~ Below I describe my home folder layout and why I do things the way I do, perhaps you&#39;ll get something out of it. It&#39;s a little excessive, I know, but what can you do? 🤷‍♂
 . ├── archive # old files by creation year, maybe useful again ├── 2019 └── 2019-01-01_file.txt # ISO-8601 date format is king, fight me └── 2020 | ├── backups # I use restic (and timeshift, but not in this dir) | ├── inbox # where all my unsorted downloads begin | ├── library # actually a symlink to my Dropbox folder on a secondary HDD | # ^^ sorted downloads end up here ├── art ├── books ├── {DDS/LoC} # classification schema └── shelf # currently reading or soon-to-read ├── music ├── photos ├── scrots # aka screenshots ├── videos └── walls # aka wallpapers | ├── org # life admin: CVs, bank statements etc | ├── projects # code, websites etc | └── wiki # a bunch of interlinked markdown files, once managed by vimwiki └── diary # I&#39;ve since moved to Joplin as it&#39;s became really awesome in 2019.</description>
    </item>
    
    <item>
      <title>Aliases</title>
      <link>http://www.rkinneavy.com/docs/linux/bash/aliases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.rkinneavy.com/docs/linux/bash/aliases/</guid>
      <description>Aliases  Below are some notable aliases. I do remember to use most of these. Sometimes.
 # read in any changes made to the config since the terminal instance began alias shrc=&amp;#39;source ~/.bashrc&amp;#39; # run the last command as root alias pls=&amp;#39;sudo !! &amp;#39; # append the last run command to a notes file in the $cwd alias n=&amp;#34;history | tail -2 | head -1 | tr -s &amp;#39; &amp;#39; | cut -d&amp;#39; &amp;#39; -f3- | awk &amp;#39;{print \&amp;#34;# \&amp;#34;\$0}&amp;#39; &amp;gt;&amp;gt; notes&amp;#34; # not mine - I wish!</description>
    </item>
    
    <item>
      <title>Bashrc</title>
      <link>http://www.rkinneavy.com/docs/linux/bash/shellrc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.rkinneavy.com/docs/linux/bash/shellrc/</guid>
      <description>~/.shell.d In my .bashrc I tell it to source configuration options from the directory structured as below:
. ├── aliases ├── environment ├── functions ├── fzf ├── history ├── path ├── prompt └── readline General  Why not just put it all in .bashrc?
  While it&#39;s slightly slower to source all these files, it&#39;s a bit more &amp;lsquo;pluggable&amp;rsquo; - it&#39;s much easier for me to manage and update individual files rather than have a 300-line behemoth of a shellrc.</description>
    </item>
    
    <item>
      <title>Dotfiles</title>
      <link>http://www.rkinneavy.com/docs/linux/setup/dotfiles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.rkinneavy.com/docs/linux/setup/dotfiles/</guid>
      <description>management  git &amp;ndash;bare repo method as detailed in atlassian tutorial and similar  although I have a clever &amp;lsquo;dots&amp;rsquo; alias   I tried yadm, stow etc but they never really clicked, needed to do it this way to grok it  I don&#39;t want to put a file in the git repo and then symlink it out. I want the file to be in the right place, and simply track it by adding it to the bare git repo.</description>
    </item>
    
    <item>
      <title>Functions</title>
      <link>http://www.rkinneavy.com/docs/linux/bash/functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.rkinneavy.com/docs/linux/bash/functions/</guid>
      <description>Bash Functions I really love bash functions. I scoured the web for awesome ones, and wrote a few of my own. Here are a few worthy of mention:
TODO: explanatory comments
Brain-assisters cheats() { cheat -l | sk --preview &amp;#34;cheat {1}&amp;#34; } explain () { if [ &amp;#34;$#&amp;#34; -eq 0 ]; then while read -p &amp;#34;Command: &amp;#34; cmd; do curl -Gs &amp;#34;https://www.mankier.com/api/v2/explain/?cols=&amp;#34;$(tput cols) --data-urlencode &amp;#34;q=$cmd&amp;#34; done echo &amp;#34;Bye!&amp;#34; elif [ &amp;#34;$#&amp;#34; -eq 1 ]; then curl -Gs &amp;#34;https://www.</description>
    </item>
    
    <item>
      <title>Scripts</title>
      <link>http://www.rkinneavy.com/docs/linux/bash/scripts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.rkinneavy.com/docs/linux/bash/scripts/</guid>
      <description>Scripts TODO: insert and explain my scripts below</description>
    </item>
    
  </channel>
</rss>